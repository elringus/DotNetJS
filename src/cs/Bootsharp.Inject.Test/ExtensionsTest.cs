using Microsoft.Extensions.DependencyInjection;

namespace Bootsharp.Inject.Test;

public class TypesTest
{
    [Fact]
    public void CanInjectGeneratedTypes ()
    {
        AddAutogenerated();
        var provider = new ServiceCollection()
            .AddBootsharp()
            .BuildServiceProvider();
        Assert.IsType<JSFrontend>(provider.GetRequiredService<IFrontend>());
    }

    [Fact]
    public void CanInitializeGeneratedTypes ()
    {
        AddAutogenerated();
        new ServiceCollection()
            .AddSingleton<IBackend, Backend>()
            .AddBootsharp()
            .BuildServiceProvider()
            .RunBootsharp();
        Assert.IsType<Backend>(JSBackend.Handler);
    }

    [Fact]
    public void WhenMissingRequiredDependencyErrorIsThrown ()
    {
        AddAutogenerated();
        Assert.Contains("Failed to run Bootsharp: 'Bootsharp.Inject.Test.Mocks+IBackend' dependency is not registered.",
            Assert.Throws<Error>(() => new ServiceCollection().AddBootsharp().BuildServiceProvider().RunBootsharp()).Message);
    }

    // emulates auto-generated code behaviour on module initialization
    private static void AddAutogenerated ()
    {
        Interfaces.Register(typeof(JSBackend), new ExportInterface(typeof(IBackend), h => new JSBackend((IBackend)h)));
        Interfaces.Register(typeof(IFrontend), new ImportInterface(new JSFrontend()));
    }
}
