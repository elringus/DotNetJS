using Microsoft.Extensions.DependencyInjection;

namespace Bootsharp.Inject;

/// <summary>
/// Extension methods for dependency injection.
/// </summary>
public static class Extensions
{
    /// <summary>
    /// Registers JavaScript bindings generated by Bootsharp.
    /// </summary>
    public static IServiceCollection AddBootsharp (this IServiceCollection services)
    {
        foreach (var (impl, binding) in Interfaces.Exports)
            services.AddSingleton(impl, provider => {
                var handler = provider.GetService(binding.Interface);
                if (handler is null) throw new Error($"Failed to run Bootsharp: '{binding.Interface}' dependency is not registered.");
                return binding.Factory(provider.GetRequiredService(binding.Interface));
            });
        foreach (var (api, binding) in Interfaces.Imports)
            services.AddSingleton(api, binding.Instance);
        return services;
    }

    /// <summary>
    /// Initializes exported JavaScript bindings generated by Bootsharp.
    /// </summary>
    public static IServiceProvider RunBootsharp (this IServiceProvider provider)
    {
        foreach (var (impl, _) in Interfaces.Exports)
            provider.GetRequiredService(impl);
        return provider;
    }
}
